use true as t;

type Entry {
  abstract?: string;
  await?: string;
  _boolean?: string;
  break?: string;
  byte?: string;
  case?: string;
  catch?: string;
  char?: string;
  class?: string;
  const?: string;
  continue?: string;
  debugger?: string;
  default?: string;
  delete?: string;
  do?: string;
  _double?: string;
  else?: string;
  _enum?: string;
  export?: string;
  extends?: string;
  _false?: string;
  final?: string;
  finally?: string;
  _float?: string;
  for?: string;
  function?: string;
  goto?: string;
  if?: string;
  implements?: string;
  import?: string;
  imported?: t::Empty;
  in?: string;
  instanceof?: string;
  int?: string;
  _interface?: string;
  let?: string;
  long?: string;
  native?: string;
  new?: string;
  package?: string;
  private?: string;
  protected?: string;
  public?: string;
  return?: string;
  short?: string;
  static?: string;
  super?: string;
  switch?: string;
  synchronized?: string;
  this?: string;
  throw?: string;
  throws?: string;
  transient?: string;
  _true?: string;
  try?: string;
  typeof?: string;
  var?: string;
  void?: string;
  volatile?: string;
  while?: string;
  with?: string;
  yield?: string;
}
